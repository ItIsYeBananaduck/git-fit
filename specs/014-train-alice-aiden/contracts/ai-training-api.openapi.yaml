openapi: 3.0.3
info:
  title: AI Training System API
  description: API for AI model training, data collection, and model management
  version: 1.0.0
  contact:
    name: Git-Fit AI Team
    email: ai@git-fit.app

servers:
  - url: https://api.git-fit.app/v1
    description: Production server
  - url: https://staging-api.git-fit.app/v1
    description: Staging server

paths:
  /ai-training/data:
    post:
      tags:
        - Training Data
      summary: Submit anonymized training data
      description: Submit workout data for AI training after user consent validation
      operationId: submitTrainingData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingDataSubmission'
      responses:
        '201':
          description: Training data successfully submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingDataResponse'
        '400':
          description: Invalid training data format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: User consent not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ai-training/sessions:
    get:
      tags:
        - Training Sessions
      summary: List training sessions
      description: Get list of AI training sessions with status
      operationId: listTrainingSessions
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [scheduled, running, completed, failed]
          description: Filter by training session status
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of sessions to return
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of sessions to skip
      responses:
        '200':
          description: List of training sessions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSessionsList'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Training Sessions
      summary: Start new training session
      description: Initiate a new AI model training session
      operationId: startTrainingSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingSessionRequest'
      responses:
        '201':
          description: Training session started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid training session request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Training session already in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ai-training/sessions/{sessionId}:
    get:
      tags:
        - Training Sessions
      summary: Get training session details
      description: Retrieve detailed information about a specific training session
      operationId: getTrainingSession
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
          description: Training session identifier
      responses:
        '200':
          description: Training session details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '404':
          description: Training session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      tags:
        - Training Sessions
      summary: Update training session
      description: Update training session status or configuration
      operationId: updateTrainingSession
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
          description: Training session identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingSessionUpdate'
      responses:
        '200':
          description: Training session updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingSession'
        '400':
          description: Invalid update request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Training session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ai-training/models:
    get:
      tags:
        - AI Models
      summary: List AI models
      description: Get list of AI models with their versions and status
      operationId: listAIModels
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [training, validating, deployed, archived]
          description: Filter by model status
        - name: version
          in: query
          schema:
            type: string
          description: Filter by model version
      responses:
        '200':
          description: List of AI models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModelsList'

  /ai-training/models/{modelId}:
    get:
      tags:
        - AI Models
      summary: Get AI model details
      description: Retrieve detailed information about a specific AI model
      operationId: getAIModel
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
          description: AI model identifier
      responses:
        '200':
          description: AI model details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIModel'
        '404':
          description: AI model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ai-training/models/{modelId}/deploy:
    post:
      tags:
        - AI Models
      summary: Deploy AI model
      description: Deploy a validated AI model to production
      operationId: deployAIModel
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
          description: AI model identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDeploymentRequest'
      responses:
        '200':
          description: Model deployed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDeploymentResponse'
        '400':
          description: Model not ready for deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: AI model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ai-training/models/{modelId}/rollback:
    post:
      tags:
        - AI Models
      summary: Rollback AI model
      description: Rollback to previous AI model version
      operationId: rollbackAIModel
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
          description: Current AI model identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelRollbackRequest'
      responses:
        '200':
          description: Model rolled back successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelRollbackResponse'
        '400':
          description: Rollback not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TrainingDataSubmission:
      type: object
      required:
        - hashedUserId
        - exerciseType
        - setNumber
        - strainPercentage
        - aiResponse
        - contextTags
        - timestamp
      properties:
        hashedUserId:
          type: string
          description: SHA-256 hash of user ID for anonymization
          pattern: '^[a-f0-9]{64}$'
        exerciseType:
          type: string
          description: Type of exercise performed
          example: "bench_press"
        setNumber:
          type: integer
          minimum: 1
          maximum: 20
          description: Set number within workout
        strainPercentage:
          type: number
          minimum: 0
          maximum: 100
          description: Calculated strain level (0-100)
        skipReason:
          type: string
          nullable: true
          description: Reason for skipping set if applicable
          example: "too_tired"
        sleepHours:
          type: number
          nullable: true
          minimum: 0
          maximum: 24
          description: Previous night sleep duration
        aiResponse:
          type: string
          maxLength: 280
          description: AI coaching response provided
          example: "Great form! Try adding 5 more pounds next set."
        contextTags:
          type: array
          items:
            type: string
          description: Workout context tags
          example: ["high_strain", "morning_workout"]
        timestamp:
          type: string
          format: date-time
          description: ISO datetime of workout event

    TrainingDataResponse:
      type: object
      properties:
        id:
          type: string
          description: Training data record identifier
        status:
          type: string
          enum: [received, validated, queued_for_training]
          description: Processing status
        batchId:
          type: string
          nullable: true
          description: Training batch identifier if assigned

    TrainingSessionRequest:
      type: object
      required:
        - batchId
      properties:
        batchId:
          type: string
          description: Unique batch identifier for training cycle
        forceRetrain:
          type: boolean
          default: false
          description: Force retraining even if recent model exists

    TrainingSession:
      type: object
      properties:
        id:
          type: string
          description: Training session identifier
        batchId:
          type: string
          description: Training batch identifier
        scheduledAt:
          type: string
          format: date-time
          description: When training was scheduled
        startedAt:
          type: string
          format: date-time
          nullable: true
          description: When training actually began
        completedAt:
          type: string
          format: date-time
          nullable: true
          description: When training finished
        status:
          type: string
          enum: [scheduled, data_collection, training, validation, completed, failed]
          description: Current training status
        dataSize:
          type: integer
          description: Size of training dataset in bytes
        recordCount:
          type: integer
          description: Number of training records processed
        retryCount:
          type: integer
          minimum: 0
          maximum: 5
          description: Number of retry attempts
        errorMessage:
          type: string
          nullable: true
          description: Error details if training failed
        huggingFaceJobId:
          type: string
          nullable: true
          description: External training job identifier
        modelOutputPath:
          type: string
          nullable: true
          description: Path to generated model files

    TrainingSessionUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [cancelled, retrying]
          description: New status for training session
        errorMessage:
          type: string
          nullable: true
          description: Error message if updating due to failure

    TrainingSessionsList:
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/TrainingSession'
        total:
          type: integer
          description: Total number of training sessions
        hasMore:
          type: boolean
          description: Whether more sessions are available

    AIModel:
      type: object
      properties:
        id:
          type: string
          description: AI model identifier
        version:
          type: string
          pattern: '^v\d+\.\d+\.\d+$'
          description: Semantic version
          example: "v1.2.3"
        huggingFaceModelId:
          type: string
          description: Hugging Face Hub model identifier
        baseModel:
          type: string
          description: Base model used for fine-tuning
          example: "microsoft/DialoGPT-medium"
        trainingDataBatch:
          type: string
          description: Training batch identifier
        trainingStartedAt:
          type: string
          format: date-time
          description: When training began
        trainingCompletedAt:
          type: string
          format: date-time
          nullable: true
          description: When training finished
        deployedAt:
          type: string
          format: date-time
          nullable: true
          description: When deployed to production
        status:
          type: string
          enum: [training, validating, deployed, archived]
          description: Current model status
        performanceMetrics:
          $ref: '#/components/schemas/ModelMetrics'
        rollbackData:
          $ref: '#/components/schemas/RollbackData'

    ModelMetrics:
      type: object
      properties:
        perplexity:
          type: number
          description: Model perplexity score
        bleuScore:
          type: number
          minimum: 0
          maximum: 1
          description: BLEU score for response quality
        validationLoss:
          type: number
          description: Validation loss
        trainingLoss:
          type: number
          description: Final training loss
        responsiveness:
          type: number
          minimum: 0
          maximum: 1
          description: Context-appropriate response rate

    RollbackData:
      type: object
      nullable: true
      properties:
        previousModelId:
          type: string
          description: Previous model ID for rollback
        previousVersion:
          type: string
          description: Previous model version
        rollbackReason:
          type: string
          nullable: true
          description: Reason for potential rollback

    AIModelsList:
      type: object
      properties:
        models:
          type: array
          items:
            $ref: '#/components/schemas/AIModel'
        total:
          type: integer
          description: Total number of models

    ModelDeploymentRequest:
      type: object
      required:
        - deploymentEnvironment
      properties:
        deploymentEnvironment:
          type: string
          enum: [staging, production]
          description: Target deployment environment
        rollbackStrategy:
          type: string
          enum: [immediate, gradual, manual]
          default: gradual
          description: Rollback strategy if deployment fails

    ModelDeploymentResponse:
      type: object
      properties:
        deploymentId:
          type: string
          description: Deployment identifier
        status:
          type: string
          enum: [deploying, deployed, failed]
          description: Deployment status
        deployedAt:
          type: string
          format: date-time
          description: Deployment timestamp
        rollbackAvailable:
          type: boolean
          description: Whether rollback is available

    ModelRollbackRequest:
      type: object
      required:
        - rollbackReason
      properties:
        rollbackReason:
          type: string
          description: Reason for rollback
          example: "Performance degradation detected"
        targetModelId:
          type: string
          nullable: true
          description: Specific model to rollback to (if not previous)

    ModelRollbackResponse:
      type: object
      properties:
        rollbackId:
          type: string
          description: Rollback operation identifier
        rolledBackTo:
          type: string
          description: Model ID that was rolled back to
        rolledBackAt:
          type: string
          format: date-time
          description: Rollback timestamp

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          nullable: true
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - BearerAuth: []
  - ApiKeyAuth: []

tags:
  - name: Training Data
    description: Operations for submitting and managing training data
  - name: Training Sessions
    description: Operations for managing AI training sessions
  - name: AI Models
    description: Operations for managing AI models and deployments