openapi: 3.0.3
info:
  title: Git-Fit Advanced Wearable Integration API
  description: |
    Comprehensive API for multi-device wearable integration, health data collection, 
    and real-time workout optimization. Built on existing Fitbit/WHOOP infrastructure.
  version: 1.0.0
  contact:
    name: Git-Fit Development Team
    url: https://github.com/git-fit/git-fit
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.git-fit.com/v1
    description: Production server
  - url: https://staging-api.git-fit.com/v1
    description: Staging server
  - url: http://localhost:3000/api/v1
    description: Development server

security:
  - BearerAuth: []

tags:
  - name: Device Management
    description: Wearable device registration, pairing, and management
  - name: Health Metrics
    description: Health data collection, validation, and conflict resolution
  - name: Real-time Data
    description: Live health data streaming and workout integration
  - name: Data Quality
    description: Data validation, quality assessment, and reliability scoring

paths:
  /devices:
    get:
      tags:
        - Device Management
      summary: List user's wearable devices
      description: Retrieve all registered wearable devices for the authenticated user
      parameters:
        - name: status
          in: query
          description: Filter devices by connection status
          schema:
            type: string
            enum: [connected, disconnected, connecting, error, pairing, syncing]
        - name: deviceType
          in: query
          description: Filter devices by type
          schema:
            $ref: '#/components/schemas/WearableDeviceType'
      responses:
        '200':
          description: List of user's devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/WearableDevice'
                  total:
                    type: integer
                  connectedCount:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Device Management
      summary: Register new wearable device
      description: Register a new wearable device and initiate pairing process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - deviceType
                - name
              properties:
                deviceType:
                  $ref: '#/components/schemas/WearableDeviceType'
                name:
                  type: string
                  description: User-assigned device name
                  example: "My Apple Watch"
                priority:
                  type: integer
                  minimum: 1
                  maximum: 10
                  default: 5
                  description: Device priority for data selection (1=highest)
                settings:
                  $ref: '#/components/schemas/DeviceSettings'
      responses:
        '201':
          description: Device registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  device:
                    $ref: '#/components/schemas/WearableDevice'
                  pairingInstructions:
                    type: object
                    properties:
                      authUrl:
                        type: string
                        format: uri
                      qrCode:
                        type: string
                        format: byte
                      steps:
                        type: array
                        items:
                          type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Device already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /devices/{deviceId}:
    get:
      tags:
        - Device Management
      summary: Get device details
      description: Retrieve detailed information about a specific device
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
          description: Unique device identifier
      responses:
        '200':
          description: Device details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WearableDevice'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      tags:
        - Device Management
      summary: Update device settings
      description: Update device configuration and preferences
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                priority:
                  type: integer
                  minimum: 1
                  maximum: 10
                settings:
                  $ref: '#/components/schemas/DeviceSettings'
      responses:
        '200':
          description: Device updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WearableDevice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    delete:
      tags:
        - Device Management
      summary: Remove device
      description: Unregister device and revoke access
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Device removed successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /devices/{deviceId}/sync:
    post:
      tags:
        - Device Management
      summary: Trigger manual sync
      description: Manually trigger data synchronization for a device
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Sync initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  syncSessionId:
                    type: string
                  estimatedDuration:
                    type: integer
                    description: Estimated sync duration in seconds
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /health-metrics:
    get:
      tags:
        - Health Metrics
      summary: Get health metrics
      description: Retrieve health metrics with filtering and pagination
      parameters:
        - name: metricType
          in: query
          description: Filter by metric type
          schema:
            $ref: '#/components/schemas/HealthMetricType'
        - name: deviceId
          in: query
          description: Filter by device
          schema:
            type: string
        - name: startTime
          in: query
          description: Start time for data range (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          description: End time for data range (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: minQuality
          in: query
          description: Minimum data quality score (0-100)
          schema:
            type: number
            minimum: 0
            maximum: 100
      responses:
        '200':
          description: Health metrics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/HealthMetric'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  qualitySummary:
                    $ref: '#/components/schemas/QualitySummary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      tags:
        - Health Metrics
      summary: Submit health metric data
      description: Submit new health metric data from devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - metrics
              properties:
                metrics:
                  type: array
                  items:
                    $ref: '#/components/schemas/HealthMetricInput'
                validateOnly:
                  type: boolean
                  default: false
                  description: Only validate data without storing
      responses:
        '201':
          description: Metrics submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accepted:
                    type: array
                    items:
                      type: string
                    description: IDs of accepted metrics
                  rejected:
                    type: array
                    items:
                      type: object
                      properties:
                        index:
                          type: integer
                        reason:
                          type: string
                        errors:
                          type: array
                          items:
                            type: string
                  conflicts:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataConflict'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /health-metrics/realtime:
    get:
      tags:
        - Real-time Data
      summary: WebSocket for real-time health data
      description: |
        WebSocket endpoint for real-time health data streaming during workouts.
        Upgrade to WebSocket connection for live data updates.
      responses:
        '101':
          description: Switching to WebSocket protocol
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /health-metrics/conflicts:
    get:
      tags:
        - Data Quality
      summary: Get data conflicts
      description: Retrieve unresolved data conflicts requiring user attention
      parameters:
        - name: status
          in: query
          description: Filter conflicts by resolution status
          schema:
            type: string
            enum: [pending, resolved, ignored]
            default: pending
        - name: metricType
          in: query
          schema:
            $ref: '#/components/schemas/HealthMetricType'
      responses:
        '200':
          description: List of data conflicts
          content:
            application/json:
              schema:
                type: object
                properties:
                  conflicts:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataConflict'
                  summary:
                    type: object
                    properties:
                      total:
                        type: integer
                      pending:
                        type: integer
                      resolved:
                        type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'

  /health-metrics/conflicts/{conflictId}/resolve:
    post:
      tags:
        - Data Quality
      summary: Resolve data conflict
      description: Manually resolve a data conflict with user preference
      parameters:
        - name: conflictId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resolution
              properties:
                resolution:
                  type: object
                  required:
                    - strategy
                    - selectedValue
                  properties:
                    strategy:
                      $ref: '#/components/schemas/ConflictResolutionStrategy'
                    selectedValue:
                      oneOf:
                        - type: number
                        - $ref: '#/components/schemas/HealthMetricValue'
                    selectedDeviceId:
                      type: string
                    userNote:
                      type: string
      responses:
        '200':
          description: Conflict resolved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResolution'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    WearableDeviceType:
      type: string
      enum:
        - apple_watch
        - fitbit
        - whoop
        - garmin
        - samsung_galaxy_watch
        - polar
        - oura_ring
        - samsung_health
        - google_fit

    WearableDevice:
      type: object
      required:
        - id
        - userId
        - deviceType
        - name
        - status
        - capabilities
        - qualityScore
        - priority
        - lastConnected
        - connectionHealth
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique device identifier
        userId:
          type: string
          description: Associated user ID
        deviceType:
          $ref: '#/components/schemas/WearableDeviceType'
        name:
          type: string
          description: User-assigned device name
        status:
          type: string
          enum: [connected, disconnected, connecting, error, pairing, syncing]
        capabilities:
          $ref: '#/components/schemas/DeviceCapabilities'
        qualityScore:
          type: number
          minimum: 0
          maximum: 100
          description: Device reliability score
        priority:
          type: integer
          minimum: 1
          maximum: 10
          description: Data selection priority (1=highest)
        lastConnected:
          type: integer
          description: Unix timestamp of last connection
        connectionHealth:
          $ref: '#/components/schemas/ConnectionHealth'
        settings:
          $ref: '#/components/schemas/DeviceSettings'
        firmwareVersion:
          type: string
          nullable: true
        batteryLevel:
          type: integer
          minimum: 0
          maximum: 100
          nullable: true
        createdAt:
          type: integer
          description: Unix timestamp of device registration
        updatedAt:
          type: integer
          description: Unix timestamp of last update

    DeviceCapabilities:
      type: object
      properties:
        heartRate:
          type: boolean
        steps:
          type: boolean
        sleep:
          type: boolean
        workouts:
          type: boolean
        hrv:
          type: boolean
        spo2:
          type: boolean
        stress:
          type: boolean
        bodyComposition:
          type: boolean
        respiratory:
          type: boolean
        temperature:
          type: boolean
        altitude:
          type: boolean
        gps:
          type: boolean
        menstrualCycle:
          type: boolean
        realTimeUpdates:
          type: boolean
        offlineSync:
          type: boolean

    ConnectionHealth:
      type: object
      required:
        - latency
        - reliability
        - dataQuality
        - syncFrequency
        - lastSyncDuration
        - errorCount
        - batteryImpact
      properties:
        latency:
          type: number
          description: Average data latency in milliseconds
        reliability:
          type: number
          minimum: 0
          maximum: 100
          description: Connection success rate percentage
        dataQuality:
          type: number
          minimum: 0
          maximum: 100
          description: Data accuracy score
        syncFrequency:
          type: number
          description: Successful syncs per hour
        lastSyncDuration:
          type: number
          description: Last sync duration in milliseconds
        errorCount:
          type: integer
          minimum: 0
          description: Recent error count
        batteryImpact:
          type: number
          minimum: 0
          maximum: 100
          description: Battery drain score

    DeviceSettings:
      type: object
      properties:
        pollingInterval:
          type: integer
          minimum: 1000
          description: Data polling interval in milliseconds
        autoSync:
          type: boolean
          default: true
        notifications:
          type: boolean
          default: true
        dataRetention:
          type: integer
          minimum: 30
          description: Data retention period in days

    HealthMetricType:
      type: string
      enum:
        - heart_rate
        - hrv_rmssd
        - hrv_sdnn
        - blood_pressure
        - spo2
        - steps
        - distance
        - calories_burned
        - active_minutes
        - stairs_climbed
        - sleep_duration
        - sleep_efficiency
        - sleep_stage
        - recovery_score
        - readiness_score
        - stress_level
        - ans_balance
        - meditation_minutes
        - weight
        - body_fat_percentage
        - muscle_mass
        - bone_density
        - bmi
        - respiratory_rate
        - breathing_pattern
        - body_temperature
        - skin_temperature
        - altitude
        - ambient_temperature
        - humidity
        - menstrual_cycle_phase
        - cycle_day
        - symptoms
        - workout_intensity
        - training_load
        - power_output
        - pace
        - cadence

    HealthMetric:
      type: object
      required:
        - id
        - userId
        - deviceId
        - metricType
        - value
        - unit
        - timestamp
        - quality
        - confidence
        - validated
        - outlier
        - processed
        - syncedAt
      properties:
        id:
          type: string
          description: Unique metric identifier
        userId:
          type: string
          description: Associated user ID
        deviceId:
          type: string
          description: Source device ID
        metricType:
          $ref: '#/components/schemas/HealthMetricType'
        value:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/HealthMetricValue'
        unit:
          type: string
          description: Measurement unit
        timestamp:
          type: integer
          description: Unix timestamp (UTC)
        quality:
          $ref: '#/components/schemas/DataQuality'
        confidence:
          type: number
          minimum: 0
          maximum: 100
          description: Confidence score
        validated:
          type: boolean
          description: Passed validation checks
        outlier:
          type: boolean
          description: Flagged as outlier
        context:
          $ref: '#/components/schemas/MetricContext'
        correlationId:
          type: string
          nullable: true
          description: Related metric group
        workoutId:
          type: string
          nullable: true
          description: Associated workout session
        sleepSessionId:
          type: string
          nullable: true
          description: Associated sleep session
        rawData:
          type: object
          nullable: true
          description: Original device data
        processed:
          type: boolean
          description: Processed by algorithms
        syncedAt:
          type: integer
          description: Sync timestamp

    HealthMetricValue:
      type: object
      required:
        - primary
      properties:
        primary:
          type: number
          description: Primary value
        secondary:
          type: number
          nullable: true
          description: Secondary value (e.g., diastolic BP)
        category:
          type: string
          nullable: true
          description: Categorical data (e.g., sleep stage)
        range:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
          nullable: true
          description: Value range
        trend:
          type: string
          enum: [increasing, decreasing, stable]
          nullable: true

    HealthMetricInput:
      type: object
      required:
        - deviceId
        - metricType
        - value
        - unit
        - timestamp
      properties:
        deviceId:
          type: string
        metricType:
          $ref: '#/components/schemas/HealthMetricType'
        value:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/HealthMetricValue'
        unit:
          type: string
        timestamp:
          type: integer
        context:
          $ref: '#/components/schemas/MetricContext'
        rawData:
          type: object
          nullable: true

    DataQuality:
      type: object
      required:
        - accuracy
        - completeness
        - consistency
        - timeliness
        - deviceReliability
        - validationsPassed
        - validationsFailed
      properties:
        accuracy:
          type: number
          minimum: 0
          maximum: 100
        completeness:
          type: number
          minimum: 0
          maximum: 100
        consistency:
          type: number
          minimum: 0
          maximum: 100
        timeliness:
          type: number
          minimum: 0
          maximum: 100
        deviceReliability:
          type: number
          minimum: 0
          maximum: 100
        validationsPassed:
          type: array
          items:
            type: string
        validationsFailed:
          type: array
          items:
            type: string

    MetricContext:
      type: object
      properties:
        activityType:
          type: string
        location:
          type: object
        weather:
          type: object
        userState:
          type: string
        deviceState:
          type: object

    DataConflict:
      type: object
      required:
        - id
        - metricType
        - timestamp
        - sourceDevices
        - values
        - resolutionStrategy
        - confidence
        - manualOverride
      properties:
        id:
          type: string
        metricType:
          $ref: '#/components/schemas/HealthMetricType'
        timestamp:
          type: integer
        sourceDevices:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/ConflictingValue'
        resolutionStrategy:
          $ref: '#/components/schemas/ConflictResolutionStrategy'
        resolvedValue:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/HealthMetricValue'
          nullable: true
        confidence:
          type: number
          minimum: 0
          maximum: 100
        manualOverride:
          type: boolean

    ConflictingValue:
      type: object
      required:
        - deviceId
        - value
        - quality
        - timestamp
        - confidence
      properties:
        deviceId:
          type: string
        value:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/HealthMetricValue'
        quality:
          type: number
          minimum: 0
          maximum: 100
        timestamp:
          type: integer
        confidence:
          type: number
          minimum: 0
          maximum: 100

    ConflictResolutionStrategy:
      type: string
      enum:
        - highest_quality
        - device_priority
        - weighted_average
        - temporal_priority
        - context_specific
        - ml_prediction
        - manual_selection

    ConflictResolution:
      type: object
      required:
        - conflictId
        - strategy
        - resolvedValue
        - confidence
        - timestamp
      properties:
        conflictId:
          type: string
        strategy:
          $ref: '#/components/schemas/ConflictResolutionStrategy'
        resolvedValue:
          oneOf:
            - type: number
            - $ref: '#/components/schemas/HealthMetricValue'
        confidence:
          type: number
          minimum: 0
          maximum: 100
        timestamp:
          type: integer
        userNote:
          type: string
          nullable: true

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
        - hasNext
        - hasPrevious
      properties:
        page:
          type: integer
          minimum: 1
        limit:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean

    QualitySummary:
      type: object
      required:
        - averageQuality
        - deviceBreakdown
        - metricTypeBreakdown
      properties:
        averageQuality:
          type: number
          minimum: 0
          maximum: 100
        deviceBreakdown:
          type: object
          additionalProperties:
            type: number
        metricTypeBreakdown:
          type: object
          additionalProperties:
            type: number

    Error:
      type: object
      required:
        - type
        - title
        - status
        - detail
      properties:
        type:
          type: string
          format: uri
          description: URI reference for the error type
        title:
          type: string
          description: Short, human-readable summary
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation
        instance:
          type: string
          format: uri
          description: URI reference for the specific occurrence
        errorCode:
          type: string
          description: Application-specific error code

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'